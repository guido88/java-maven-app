# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven


on:
  push:
    branches: [ "master" ]
  
permissions:
  contents: write  

jobs:
  build:
    #if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
      
      # Bump the version using Maven
    - name: Bump project version
      id: bump_version
      run: | 
           mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} versions:commit
           NEW_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/\\//g')
           echo "::set-output name=new_version::$NEW_VERSION"
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v3
      with:
        image: guido88/privaterepo
        tag: ${{ steps.bump_version.outputs.new_version }}
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Commit and push changes
      run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pom.xml
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git push
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.AWS_SSH_KEY }}

    - name: Copy files to EC2
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yaml ec2-user@35.157.121.146:/home/ec2-user/
        scp -o StrictHostKeyChecking=no script.sh ec2-user@35.157.121.146:/home/ec2-user/
     
 
